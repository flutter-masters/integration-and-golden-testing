// Mocks generated by Mockito 5.4.4 from annotations
// in integration_and_golden_testing/test/mockito.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:appwrite/src/client.dart' as _i3;
import 'package:appwrite/src/enums.dart' as _i8;
import 'package:appwrite/src/response.dart' as _i2;
import 'package:appwrite/src/upload_progress.dart' as _i7;
import 'package:internet_connection_checker_plus/internet_connection_checker_plus.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDuration_0 extends _i1.SmartFake implements Duration {
  _FakeDuration_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_1<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClient_2 extends _i1.SmartFake implements _i3.Client {
  _FakeClient_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [InternetConnection].
///
/// See the documentation for Mockito's code generation for more information.
class MockInternetConnection extends _i1.Mock
    implements _i4.InternetConnection {
  MockInternetConnection() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Duration get checkInterval => (super.noSuchMethod(
        Invocation.getter(#checkInterval),
        returnValue: _FakeDuration_0(
          this,
          Invocation.getter(#checkInterval),
        ),
      ) as Duration);

  @override
  _i5.Future<bool> get hasInternetAccess => (super.noSuchMethod(
        Invocation.getter(#hasInternetAccess),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<_i4.InternetStatus> get internetStatus => (super.noSuchMethod(
        Invocation.getter(#internetStatus),
        returnValue:
            _i5.Future<_i4.InternetStatus>.value(_i4.InternetStatus.connected),
      ) as _i5.Future<_i4.InternetStatus>);

  @override
  _i5.Stream<_i4.InternetStatus> get onStatusChange => (super.noSuchMethod(
        Invocation.getter(#onStatusChange),
        returnValue: _i5.Stream<_i4.InternetStatus>.empty(),
      ) as _i5.Stream<_i4.InternetStatus>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i3.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, String> get config => (super.noSuchMethod(
        Invocation.getter(#config),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set config(Map<String, String>? _config) => super.noSuchMethod(
        Invocation.setter(
          #config,
          _config,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get endPoint => (super.noSuchMethod(
        Invocation.getter(#endPoint),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.getter(#endPoint),
        ),
      ) as String);

  @override
  _i5.Future<dynamic> webAuth(
    Uri? url, {
    String? callbackUrlScheme,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #webAuth,
          [url],
          {#callbackUrlScheme: callbackUrlScheme},
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<_i2.Response<dynamic>> chunkedUpload({
    required String? path,
    required Map<String, dynamic>? params,
    required String? paramName,
    required String? idParamName,
    required Map<String, String>? headers,
    dynamic Function(_i7.UploadProgress)? onProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #chunkedUpload,
          [],
          {
            #path: path,
            #params: params,
            #paramName: paramName,
            #idParamName: idParamName,
            #headers: headers,
            #onProgress: onProgress,
          },
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_1<dynamic>(
          this,
          Invocation.method(
            #chunkedUpload,
            [],
            {
              #path: path,
              #params: params,
              #paramName: paramName,
              #idParamName: idParamName,
              #headers: headers,
              #onProgress: onProgress,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);

  @override
  _i3.Client setSelfSigned({bool? status = true}) => (super.noSuchMethod(
        Invocation.method(
          #setSelfSigned,
          [],
          {#status: status},
        ),
        returnValue: _FakeClient_2(
          this,
          Invocation.method(
            #setSelfSigned,
            [],
            {#status: status},
          ),
        ),
      ) as _i3.Client);

  @override
  _i3.Client setEndpoint(String? endPoint) => (super.noSuchMethod(
        Invocation.method(
          #setEndpoint,
          [endPoint],
        ),
        returnValue: _FakeClient_2(
          this,
          Invocation.method(
            #setEndpoint,
            [endPoint],
          ),
        ),
      ) as _i3.Client);

  @override
  _i3.Client setEndPointRealtime(String? endPoint) => (super.noSuchMethod(
        Invocation.method(
          #setEndPointRealtime,
          [endPoint],
        ),
        returnValue: _FakeClient_2(
          this,
          Invocation.method(
            #setEndPointRealtime,
            [endPoint],
          ),
        ),
      ) as _i3.Client);

  @override
  _i3.Client setProject(dynamic value) => (super.noSuchMethod(
        Invocation.method(
          #setProject,
          [value],
        ),
        returnValue: _FakeClient_2(
          this,
          Invocation.method(
            #setProject,
            [value],
          ),
        ),
      ) as _i3.Client);

  @override
  _i3.Client setJWT(dynamic value) => (super.noSuchMethod(
        Invocation.method(
          #setJWT,
          [value],
        ),
        returnValue: _FakeClient_2(
          this,
          Invocation.method(
            #setJWT,
            [value],
          ),
        ),
      ) as _i3.Client);

  @override
  _i3.Client setLocale(dynamic value) => (super.noSuchMethod(
        Invocation.method(
          #setLocale,
          [value],
        ),
        returnValue: _FakeClient_2(
          this,
          Invocation.method(
            #setLocale,
            [value],
          ),
        ),
      ) as _i3.Client);

  @override
  _i3.Client setSession(dynamic value) => (super.noSuchMethod(
        Invocation.method(
          #setSession,
          [value],
        ),
        returnValue: _FakeClient_2(
          this,
          Invocation.method(
            #setSession,
            [value],
          ),
        ),
      ) as _i3.Client);

  @override
  _i3.Client addHeader(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addHeader,
          [
            key,
            value,
          ],
        ),
        returnValue: _FakeClient_2(
          this,
          Invocation.method(
            #addHeader,
            [
              key,
              value,
            ],
          ),
        ),
      ) as _i3.Client);

  @override
  _i5.Future<_i2.Response<dynamic>> call(
    _i8.HttpMethod? method, {
    String? path = r'',
    Map<String, String>? headers = const {},
    Map<String, dynamic>? params = const {},
    _i8.ResponseType? responseType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [method],
          {
            #path: path,
            #headers: headers,
            #params: params,
            #responseType: responseType,
          },
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_1<dynamic>(
          this,
          Invocation.method(
            #call,
            [method],
            {
              #path: path,
              #headers: headers,
              #params: params,
              #responseType: responseType,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
}
